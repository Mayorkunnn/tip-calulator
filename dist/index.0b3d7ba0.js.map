{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["var $5da8e2a646daffc2$exports = {};\nclass $5da8e2a646daffc2$var$TipCalculator {\n    constructor(){\n        this.billInput = document.getElementById(\"input__bill\");\n        this.personInput = document.getElementById(\"input__people\");\n        this.tipInput = document.getElementById(\"input__tip\");\n        this.tipButton = document.querySelectorAll(\".tip__button\");\n        this.tipAmount = document.getElementById(\"tip__amount\");\n        this.totalAmount = document.getElementById(\"tip__total\");\n        this.errorMessage = document.querySelector(\".error__message\");\n        this.inputs = document.querySelectorAll(\".input\");\n        this.tipContainer = document.querySelector(\".tips\");\n        this.resetButton = document.querySelector(\".reset--button\");\n        this.calculateButton = document.querySelector(\".calculate\");\n        this.init();\n        this.hideErrorMessage();\n        this.attachEventListeners();\n    }\n    init() {\n        this.resetFields();\n    // this.displayResults();\n    }\n    resetFields() {\n        this.billInput.value = \"\";\n        this.personInput.value = \"\";\n        this.tipInput.value = \"\";\n        this.tipAmount.textContent = \"$0.00\";\n        this.totalAmount.textContent = \"$0.00\";\n    }\n    displayResults() {\n        const bill = parseFloat(this.billInput.value);\n        const people = parseInt(this.personInput.value);\n        const tip = parseFloat(this.tipInput.value);\n        if (isNaN(bill) || bill < 1) {\n            this.showErrorMessage(this.billInput);\n            return;\n        }\n        if (isNaN(people) || people < 1) {\n            this.showErrorMessage(this.personInput);\n            return;\n        }\n        this.hideErrorMessage();\n        if (bill && people && tip) {\n            const discount = bill * tip / 100;\n            const tipAmount = discount / people;\n            const totalAmount = (bill + discount) / people;\n            this.tipAmount.textContent = `$${tipAmount.toFixed(2)}`;\n            this.totalAmount.textContent = `$${totalAmount.toFixed(2)}`;\n        }\n    }\n    showErrorMessage(inputElement) {\n        const errorMessage = inputElement.nextElementSibling.nextElementSibling;\n        errorMessage.textContent = \"Invalid Input\";\n        errorMessage.classList.remove(\"hidden\");\n    }\n    hideErrorMessage() {\n        this.errorMessage.classList.add(\"hidden\");\n        this.billInput.nextElementSibling.nextElementSibling.classList.add(\"hidden\");\n        this.personInput.nextElementSibling.nextElementSibling.classList.add(\"hidden\");\n    }\n    attachEventListeners() {\n        this.tipContainer.addEventListener(\"click\", (e)=>{\n            const clicked = e.target.closest(\"button\");\n            if (!clicked) return;\n            const dataNum = clicked.dataset.num;\n            [\n                ...clicked.parentElement.children\n            ].forEach((t)=>{\n                if (t.classList.contains(\"tip__button\")) t.style.backgroundColor = `var(--color-buttonandtext)`;\n            });\n            this.tipInput.value = dataNum;\n            clicked.style.backgroundColor = `var(--color-reset)`;\n        });\n        this.inputs.forEach((input)=>{\n            input.addEventListener(\"focus\", (e)=>{\n                const clicked = e.target;\n                clicked.nextElementSibling.style.opacity = 0;\n            });\n        });\n        this.calculateButton.addEventListener(\"click\", ()=>{\n            const billValue = parseFloat(this.billInput.value);\n            const personValue = parseInt(this.personInput.value);\n            if (isNaN(billValue) || billValue < 1) {\n                this.showErrorMessage(this.billInput);\n                return;\n            }\n            if (isNaN(personValue) || personValue < 1) {\n                this.showErrorMessage(this.personInput);\n                return;\n            }\n            this.displayResults();\n        });\n        document.addEventListener(\"keypress\", (e)=>{\n            if (e.key === \"Enter\") {\n                const billValue = parseFloat(this.billInput.value);\n                const personValue = parseInt(this.personInput.value);\n                if (isNaN(billValue) || billValue < 1) {\n                    this.showErrorMessage(this.billInput);\n                    return;\n                }\n                if (isNaN(personValue) || personValue < 1) {\n                    this.showErrorMessage(this.personInput);\n                    return;\n                }\n                this.displayResults();\n            }\n        });\n        this.resetButton.addEventListener(\"click\", ()=>{\n            this.init();\n            this.defaultButton();\n            this.inputs.forEach((input)=>{\n                input.nextElementSibling.style.opacity = 100;\n            });\n        });\n    }\n    defaultButton() {\n        this.tipButton.forEach((button)=>{\n            button.style.backgroundColor = `var(--color-buttonandtext)`;\n        });\n    }\n}\nconst $5da8e2a646daffc2$var$tipCalculator = new $5da8e2a646daffc2$var$TipCalculator();\n\n\n//# sourceMappingURL=index.0b3d7ba0.js.map\n","class TipCalculator {\r\n  constructor() {\r\n    this.billInput = document.getElementById('input__bill');\r\n    this.personInput = document.getElementById('input__people');\r\n    this.tipInput = document.getElementById('input__tip');\r\n    this.tipButton = document.querySelectorAll('.tip__button');\r\n    this.tipAmount = document.getElementById('tip__amount');\r\n    this.totalAmount = document.getElementById('tip__total');\r\n    this.errorMessage = document.querySelector('.error__message');\r\n    this.inputs = document.querySelectorAll('.input');\r\n    this.tipContainer = document.querySelector('.tips');\r\n    this.resetButton = document.querySelector('.reset--button');\r\n    this.calculateButton = document.querySelector('.calculate');\r\n    this.init();\r\n    this.hideErrorMessage();\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  init() {\r\n    this.resetFields();\r\n    // this.displayResults();\r\n  }\r\n\r\n  resetFields() {\r\n    this.billInput.value = '';\r\n    this.personInput.value = '';\r\n    this.tipInput.value = '';\r\n    this.tipAmount.textContent = '$0.00';\r\n    this.totalAmount.textContent = '$0.00';\r\n  }\r\n\r\n  displayResults() {\r\n    const bill = parseFloat(this.billInput.value);\r\n    const people = parseInt(this.personInput.value);\r\n    const tip = parseFloat(this.tipInput.value);\r\n\r\n    if (isNaN(bill) || bill < 1) {\r\n      this.showErrorMessage(this.billInput);\r\n      return;\r\n    }\r\n\r\n    if (isNaN(people) || people < 1) {\r\n      this.showErrorMessage(this.personInput);\r\n      return;\r\n    }\r\n\r\n    this.hideErrorMessage();\r\n\r\n    if (bill && people && tip) {\r\n      const discount = (bill * tip) / 100;\r\n      const tipAmount = discount / people;\r\n      const totalAmount = (bill + discount) / people;\r\n\r\n      this.tipAmount.textContent = `$${tipAmount.toFixed(2)}`;\r\n      this.totalAmount.textContent = `$${totalAmount.toFixed(2)}`;\r\n    }\r\n  }\r\n\r\n  showErrorMessage(inputElement) {\r\n    const errorMessage = inputElement.nextElementSibling.nextElementSibling;\r\n    errorMessage.textContent = 'Invalid Input';\r\n    errorMessage.classList.remove('hidden');\r\n  }\r\n\r\n  hideErrorMessage() {\r\n    this.errorMessage.classList.add('hidden');\r\n    this.billInput.nextElementSibling.nextElementSibling.classList.add(\r\n      'hidden'\r\n    );\r\n    this.personInput.nextElementSibling.nextElementSibling.classList.add(\r\n      'hidden'\r\n    );\r\n  }\r\n\r\n  attachEventListeners() {\r\n    this.tipContainer.addEventListener('click', e => {\r\n      const clicked = e.target.closest('button');\r\n      if (!clicked) return;\r\n\r\n      const dataNum = clicked.dataset.num;\r\n      [...clicked.parentElement.children].forEach(t => {\r\n        if (t.classList.contains('tip__button')) {\r\n          t.style.backgroundColor = `var(--color-buttonandtext)`;\r\n        }\r\n      });\r\n\r\n      this.tipInput.value = dataNum;\r\n      clicked.style.backgroundColor = `var(--color-reset)`;\r\n    });\r\n\r\n    this.inputs.forEach(input => {\r\n      input.addEventListener('focus', e => {\r\n        const clicked = e.target;\r\n        clicked.nextElementSibling.style.opacity = 0;\r\n      });\r\n    });\r\n\r\n    this.calculateButton.addEventListener('click', () => {\r\n      const billValue = parseFloat(this.billInput.value);\r\n      const personValue = parseInt(this.personInput.value);\r\n\r\n      if (isNaN(billValue) || billValue < 1) {\r\n        this.showErrorMessage(this.billInput);\r\n        return;\r\n      }\r\n\r\n      if (isNaN(personValue) || personValue < 1) {\r\n        this.showErrorMessage(this.personInput);\r\n        return;\r\n      }\r\n\r\n      this.displayResults();\r\n    });\r\n\r\n    document.addEventListener('keypress', e => {\r\n      if (e.key === 'Enter') {\r\n        const billValue = parseFloat(this.billInput.value);\r\n        const personValue = parseInt(this.personInput.value);\r\n\r\n        if (isNaN(billValue) || billValue < 1) {\r\n          this.showErrorMessage(this.billInput);\r\n          return;\r\n        }\r\n\r\n        if (isNaN(personValue) || personValue < 1) {\r\n          this.showErrorMessage(this.personInput);\r\n          return;\r\n        }\r\n\r\n        this.displayResults();\r\n      }\r\n    });\r\n\r\n    this.resetButton.addEventListener('click', () => {\r\n      this.init();\r\n      this.defaultButton();\r\n      this.inputs.forEach(input => {\r\n        input.nextElementSibling.style.opacity = 100;\r\n      });\r\n    });\r\n  }\r\n\r\n  defaultButton() {\r\n    this.tipButton.forEach(button => {\r\n      button.style.backgroundColor = `var(--color-buttonandtext)`;\r\n    });\r\n  }\r\n}\r\n\r\nconst tipCalculator = new TipCalculator();\r\n"],"names":["constructor","billInput","document","getElementById","personInput","tipInput","tipButton","querySelectorAll","tipAmount","totalAmount","errorMessage","querySelector","inputs","tipContainer","resetButton","calculateButton","init","hideErrorMessage","attachEventListeners","resetFields","value","textContent","displayResults","bill","parseFloat","people","parseInt","tip","isNaN","showErrorMessage","discount","toFixed","inputElement","nextElementSibling","classList","remove","add","addEventListener","e","clicked","target","closest","dataNum","dataset","num","parentElement","children","forEach","t","contains","style","backgroundColor","input","opacity","billValue","personValue","key","defaultButton","button"],"version":3,"file":"index.0b3d7ba0.js.map","sourceRoot":"../"}